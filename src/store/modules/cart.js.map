{"version":3,"sources":["../../../../src/store/modules/cart.js"],"names":["types","state","added","checkoutStatus","getters","cartProducts","rootState","map","id","quantity","product","products","all","find","title","price","cartTotalPrice","reduce","total","actions","checkout","commit","savedCartItems","SET_CHECKOUT_STATUS","SET_CART_ITEMS","items","buyProducts","mutations","ADD_TO_CART","record","push","status"],"mappings":";;;;;;;;;;;;;;gBAAA;;;;;AAGA;;;;AACA;;IAAYA,K;;;;;;AAEZ;AACA;AACA,IAAMC,QAAQ;AACZC,SAAO,EADK;AAEZC,kBAAgB;;AAGlB;AALc,CAAd,CAMA,IAAMC,UAAU;AACdD,kBAAgB;AAAA,WAASF,MAAME,cAAf;AAAA,GADF;;AAGdE,gBAAc,sBAACJ,KAAD,EAAQG,OAAR,EAAiBE,SAAjB,EAA+B;AAC3C,WAAOL,MAAMC,KAAN,CAAYK,GAAZ,CAAgB,gBAAsB;AAAA,UAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,UAAfC,QAAe,QAAfA,QAAe;;AAC3C,UAAMC,UAAUJ,UAAUK,QAAV,CAAmBC,GAAnB,CAAuBC,IAAvB,CAA4B;AAAA,eAAWH,QAAQF,EAAR,KAAeA,EAA1B;AAAA,OAA5B,CAAhB;AACA,aAAO;AACLM,eAAOJ,QAAQI,KADV;AAELC,eAAOL,QAAQK,KAFV;AAGLN;AAHK,OAAP;AAKD,KAPM,CAAP;AAQD,GAZa;;AAcdO,kBAAgB,wBAACf,KAAD,EAAQG,OAAR,EAAoB;AAClC,WAAOA,QAAQC,YAAR,CAAqBY,MAArB,CAA4B,UAACC,KAAD,EAAQR,OAAR,EAAoB;AACrD,aAAOQ,QAAQR,QAAQK,KAAR,GAAgBL,QAAQD,QAAvC;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD;;AAGH;AArBgB,CAAhB,CAsBA,IAAMU,UAAU;AACdC,UADc,2BACeT,QADf,EACyB;AAAA,QAA3BU,MAA2B,SAA3BA,MAA2B;AAAA,QAAnBpB,KAAmB,SAAnBA,KAAmB;;AACrC,QAAMqB,4DAAqBrB,MAAMC,KAA3B,EAAN;AACAmB,WAAOrB,MAAMuB,mBAAb,EAAkC,IAAlC;AACA;AACAF,WAAOrB,MAAMwB,cAAb,EAA6B,EAAEC,OAAO,EAAT,EAA7B;AACA,mBAAKC,WAAL,CACEf,QADF,EAEE;AAAA,aAAMU,OAAOrB,MAAMuB,mBAAb,EAAkC,YAAlC,CAAN;AAAA,KAFF,EAGE,YAAM;AACJF,aAAOrB,MAAMuB,mBAAb,EAAkC,QAAlC;AACA;AACAF,aAAOrB,MAAMwB,cAAb,EAA6B,EAAEC,OAAOH,cAAT,EAA7B;AACD,KAPH;AASD;AAfa,CAAhB;;AAkBA;AACA,IAAMK,wEACH3B,MAAM4B,WADH,YACiB3B,KADjB,SACgC;AAAA,MAANO,EAAM,SAANA,EAAM;;AAClCP,QAAME,cAAN,GAAuB,IAAvB;AACA,MAAM0B,SAAS5B,MAAMC,KAAN,CAAYW,IAAZ,CAAiB;AAAA,WAAWH,QAAQF,EAAR,KAAeA,EAA1B;AAAA,GAAjB,CAAf;AACA,MAAI,CAACqB,MAAL,EAAa;AACX5B,UAAMC,KAAN,CAAY4B,IAAZ,CAAiB;AACftB,YADe;AAEfC,gBAAU;AAFK,KAAjB;AAID,GALD,MAKO;AACLoB,WAAOpB,QAAP;AACD;AACF,CAZG,6CAcHT,MAAMwB,cAdH,YAcoBvB,KAdpB,SAcsC;AAAA,MAATwB,KAAS,SAATA,KAAS;;AACxCxB,QAAMC,KAAN,GAAcuB,KAAd;AACD,CAhBG,6CAkBHzB,MAAMuB,mBAlBH,YAkByBtB,KAlBzB,EAkBgC8B,MAlBhC,EAkBwC;AAC1C9B,QAAME,cAAN,GAAuB4B,MAAvB;AACD,CApBG,cAAN;;kBAuBe;AACb9B,cADa;AAEbG,kBAFa;AAGbe,kBAHa;AAIbQ;AAJa,C","file":"cart.js","sourcesContent":["/**\n *Created by admin on 2018/1/31\n */\nimport shop from '../../api/shop'\nimport * as types from '../types'\n\n// initial state\n// shape: [{ id, quantity }]\nconst state = {\n  added: [],\n  checkoutStatus: null\n}\n\n// getters\nconst getters = {\n  checkoutStatus: state => state.checkoutStatus,\n\n  cartProducts: (state, getters, rootState) => {\n    return state.added.map(({ id, quantity }) => {\n      const product = rootState.products.all.find(product => product.id === id)\n      return {\n        title: product.title,\n        price: product.price,\n        quantity\n      }\n    })\n  },\n\n  cartTotalPrice: (state, getters) => {\n    return getters.cartProducts.reduce((total, product) => {\n      return total + product.price * product.quantity\n    }, 0)\n  }\n}\n\n// actions\nconst actions = {\n  checkout ({ commit, state }, products) {\n    const savedCartItems = [...state.added]\n    commit(types.SET_CHECKOUT_STATUS, null)\n    // empty cart\n    commit(types.SET_CART_ITEMS, { items: [] })\n    shop.buyProducts(\n      products,\n      () => commit(types.SET_CHECKOUT_STATUS, 'successful'),\n      () => {\n        commit(types.SET_CHECKOUT_STATUS, 'failed')\n        // rollback to the cart saved before sending the request\n        commit(types.SET_CART_ITEMS, { items: savedCartItems })\n      }\n    )\n  }\n}\n\n// mutations\nconst mutations = {\n  [types.ADD_TO_CART] (state, { id }) {\n    state.checkoutStatus = null\n    const record = state.added.find(product => product.id === id)\n    if (!record) {\n      state.added.push({\n        id,\n        quantity: 1\n      })\n    } else {\n      record.quantity++\n    }\n  },\n\n  [types.SET_CART_ITEMS] (state, { items }) {\n    state.added = items\n  },\n\n  [types.SET_CHECKOUT_STATUS] (state, status) {\n    state.checkoutStatus = status\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}